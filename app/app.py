import os
import pandas as pd
import psycopg2

# Configuration de la base de donn√©es PostgreSQL
DB_NAME = "mydatabase"
DB_USER = "user"
DB_PASSWORD = "password"
DB_HOST = "db"  # Nom du service Docker
DB_PORT = "5432"

# Nom du fichier CSV
CSV_FILE = "data.csv"

# V√©rifier si le fichier CSV existe, sinon le cr√©er avec des donn√©es fictives
if not os.path.exists(CSV_FILE):
    print("üìÇ Fichier data.csv introuvable, cr√©ation en cours...")
    
    # G√©n√©ration des donn√©es fictives
    data = {
        "nom": ["Alice", "Bob", "Charlie", "David"],
        "age": [25, 30, 35, 40],
        "salaire": [45000, 55000, 60000, 70000]
    }
    
    df = pd.DataFrame(data)
    df.to_csv(CSV_FILE, index=False)
    
    print("‚úÖ Fichier data.csv cr√©√© avec succ√®s !")

# Charger le fichier CSV
df = pd.read_csv(CSV_FILE)
print("\nüìä Statistiques du dataset :")
print(df.describe())  # Affiche les stats sur les colonnes num√©riques
print("\nüîç Valeurs manquantes :")
print(df.isnull().sum())

# Connexion √† PostgreSQL
try:
    conn = psycopg2.connect(
        dbname=DB_NAME,
        user=DB_USER,
        password=DB_PASSWORD,
        host=DB_HOST,
        port=DB_PORT
    )
    print("‚úÖ Connexion r√©ussie √† PostgreSQL !")
except Exception as e:
    print(f"‚ùå Erreur de connexion : {e}")
    exit()

# Cr√©ation de la table dans PostgreSQL
table_name = "dataset"
with conn.cursor() as cur:
    cur.execute(f"""
        CREATE TABLE IF NOT EXISTS {table_name} (
            id SERIAL PRIMARY KEY,
            {", ".join([f"{col} TEXT" for col in df.columns])}
        );
    """)
    conn.commit()
    print(f"üìå Table '{table_name}' pr√™te dans PostgreSQL !")

# Insertion des donn√©es
with conn.cursor() as cur:
    for _, row in df.iterrows():
        cur.execute(f"""
            INSERT INTO {table_name} ({", ".join(df.columns)})
            VALUES ({", ".join(['%s' for _ in row])});
        """, tuple(row))
    conn.commit()
    print(f"‚úÖ Donn√©es ins√©r√©es dans '{table_name}' avec succ√®s !")

# Fermer la connexion
conn.close()
print("üîå Connexion PostgreSQL ferm√©e.")
